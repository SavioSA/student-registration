version: "3.9"
services:
  postgres:
    hostname: ${POSTGRES_HOSTNAME}
    image: postgres:14.1-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DATABASE} -U ${POSTGRES_USER} "]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    hostname: redis
    image: "redis:alpine"
    ports:
      - "6379:6379"

  front:
    build:
      context: .
      dockerfile: ./docker/front.dockerfile
    volumes:
    - ./apps/student-registration:/app/apps/student-registration
    - ./libs/api-interfaces:/app/libs/api-interfaces

    ports:
      - "4200:4200"

  api-gateway:
    hostname:  ${API_GATEWAY_HOSTNAME}
    build:
      context: .
      dockerfile: ./docker/api-gateway.dockerfile
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - STUDENT_REGISTRATION_SERVICE_PORT=${STUDENT_REGISTRATION_SERVICE_PORT}
      - STUDENT_REGISTRATION_SERVICE_HOSTNAME=${STUDENT_REGISTRATION_SERVICE_HOSTNAME}
    volumes:
      - ./apps/api/api-gateway:/app/apps/api/api-gateway
      - ./apps/api/dto:/app/apps/api/dto
    command: sh -c "cd apps/api/api-gateway && yarn start:dev"
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    expose:
      - ${API_GATEWAY_PORT}

  student-registration-service:
    hostname: ${STUDENT_REGISTRATION_SERVICE_HOSTNAME}
    environment:
      - API_GATEWAY_HOSTNAME=${API_GATEWAY_HOSTNAME}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOSTNAME=${POSTGRES_HOSTNAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - PORT=${STUDENT_REGISTRATION_SERVICE_PORT}
    build:
      context: .
      dockerfile: ./docker/student-registration.dockerfile
    volumes:
      - ./apps/api/student-registration:/app/apps/api/student-registration
      - ./apps/api/dto:/app/apps/api/dto
    command: sh -c "cd apps/api/student-registration && yarn start:dev"
    ports:
      - "${STUDENT_REGISTRATION_SERVICE_PORT}:${STUDENT_REGISTRATION_SERVICE_PORT}"
    expose:
      - ${STUDENT_REGISTRATION_SERVICE_PORT}

volumes:
  postgres-data:
    driver: local
